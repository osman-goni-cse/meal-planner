spring.datasource.url=${FOODSI_DB_SERVER:jdbc:postgresql://localhost:5432/mealplanner}
spring.datasource.username=${FOODSI_DB_USER:mealplanner_user}
spring.datasource.password=${FOODSI_DB_PASSWORD:mealplanner_pass}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.thymeleaf.cache=false

# --- Google OAuth2 ---
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.user-name-attribute=sub
# Uncomment and modify the line below if you want to use a custom redirect URI
# spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/custom-oauth2-callback 

spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB 

# --- JDBC Session Management ---
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-postgresql.sql
spring.session.timeout=30m

# Session Cookie Configuration
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=lax 

# Force HTTPS redirects
server.forward-headers-strategy=native
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto